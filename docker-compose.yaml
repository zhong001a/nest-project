services:
  # reservations:
  #   build:
  #     context: .
  #     dockerfile: ./apps/reservations/Dockerfile
  #     target: development
  #   command: npm run start:dev reservations
  #   env_file:
  #     - ./apps/reservations/.env
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - .:/usr/src/app
  
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    env_file:
      - ./apps/auth/.env
    ports:
      - '3001:3001'
    volumes:
      - .:/usr/src/app

  # payment:
  #   build:
  #     context: .
  #     dockerfile: ./apps/payment/Dockerfile
  #     target: development
  #   command: npm run start:dev payment
  #   env_file:
  #     - ./apps/payment/.env
  #   ports:
  #     - '3003:3003'
  #   volumes:
  #     - .:/usr/src/app

  orders:
    build:
      context: .
      dockerfile: ./apps/orders/Dockerfile
      target: development
    command: npm run start:dev orders
    env_file:
      - ./apps/orders/.env
    ports:
      - '3030:3030'
    volumes:
      - .:/usr/src/app

  items:
    build:
      context: .
      dockerfile: ./apps/items/Dockerfile
      target: development
    command: npm run start:dev items
    env_file:
      - ./apps/items/.env
    ports:
      - '3010:3010'
    volumes:
      - .:/usr/src/app

  profile:

    build:
      context: .
      dockerfile: ./apps/payment/Dockerfile
      target: development
    command: npm run start:dev payment
    env_file:
      - ./apps/payment/.env
    ports:
      - '3003:3003'
    volumes:
      - .:/usr/src/app

  mongo:
    image: mongo


